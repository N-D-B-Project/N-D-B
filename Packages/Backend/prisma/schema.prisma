generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Guild {
  id                 String               @id
  Name               String
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @default(now())
  databaseVersion    String               @default("Music")
  GuildReactionRoles GuildReactionRoles[]
  GuildSettings      GuildSettings?
}

model GuildReactionRoles {
  id        String   @id
  Message   String
  Channel   String
  Role      String
  Emoji     String
  Option    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  guildId   String
  Guild     Guild    @relation(fields: [guildId], references: [id])
}

model GuildSettings {
  id         String   @id
  Prefix     String   @default("&") @db.VarChar(4)
  Language   String   @default("en-US")
  AntiSpam   Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
  guildId    String   @unique
  ReactionDM Boolean  @default(true)
  Premium    Boolean  @default(false)
  Guild      Guild    @relation(fields: [guildId], references: [id])
}

model NDCash {
  id         String     @id
  NDCash     Int        @default(0)
  Job        NDCashJobs @default(Jobless)
  Level      Int        @default(1)
  Worked     Int        @default(0)
  DirtyMoney Int        @default(0)
  DoubleTime Boolean    @default(false)
  Daily      DateTime   @default(now())
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @default(now())
  userId     String     @unique
  User       User       @relation(fields: [userId], references: [id])
}

model User {
  id              String        @id
  Username        String
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @default(now())
  databaseVersion String        @default("Music")
  NDCash          NDCash?
  UserSettings    UserSettings?
  APIUser         APIUser?
}

model UserSettings {
  id        String   @id
  Prefix    String   @default("&") @db.VarChar(4)
  Language  String   @default("en-US")
  userId    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  User      User     @relation(fields: [userId], references: [id])
}

enum NDCashJobs {
  Jobless
}

model APIUser {
  id           String @id @default(uuid())
  email        String
  accessToken  String
  refreshToken String
  user         User   @relation(fields: [userId], references: [id])
  userId       String @unique
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}
