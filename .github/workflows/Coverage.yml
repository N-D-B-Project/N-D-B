name: Generate Coverage PR

on:
  push:
    branches:
      - master
    paths:
      - "Packages/**/*.ts"

jobs:
  generate-coverage-pr:
    strategy:
      matrix:
        node-version: [20.6.1]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn install
        env:
          # Disable Husky in CI
          # https://typicode.github.io/husky/how-to.html#skipping-git-hooks
          HUSKY: "0"

      - name: Generate coverage report
        run: |
          yarn test --coverage
          # Move coverage folder to a temporary location from Packages/Client
          mkdir -p ../coverage/client
          mv Packages/Client/test/coverage/lcov-report ../coverage/client

      - name: Create and switch to Coverage-Report branch
        run: |
          git checkout -b Coverage-Report
          git rm -rf .
          git clean -f -d

      - name: Move coverage folder to Coverage-Report branch
        run: mv ../coverage .

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "feat: Add test coverage report"
          title: "test(coverage): update"
          body: "This PR adds the test coverage report generated by the GitHub Actions workflow."
          branch: "Coverage-Report"
          labels: "automated"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Review
        uses: actions/github-script@v7
        with:
          script: |
            github.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              event: 'APPROVE'
            })
  
      - name: Merge PR
        uses: actions/github-script@v7
        with:
          script: |
            github.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            })
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
